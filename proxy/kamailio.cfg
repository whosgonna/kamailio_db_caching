#!KAMAILIO

loadmodule "db_mysql"
loadmodule "pv"
loadmodule "htable"
loadmodule "sl"
loadmodule "xlog"
loadmodule "sqlops"

modparam("sl", "bind_tm", 0)
modparam("sqlops", "sqlcon", "db=>mysql://dbuser:dbpass@sql/proxy");
modparam("htable", "htable", "did=>size=8;autoexpire=15;")

request_route {
    ## Over simplified ACK and BYE handling for sipp tests:
    if ( method == "ACK" ) {
        exit;
    }

    if ( method == "BYE" ) {
        sl_send_reply("200", "OK");
        exit;
    }

    route(GET_DID_DATA);

    xnotice("$$xavp(did_data=>did) [$xavp(did_data=>did)]\n");

    sl_send_reply("200", "OK");
}

route[GET_DID_DATA] {
    ## Use of $vn not $var so the default value is $null. Also note that
    ## this is copied first so that the hash can't expire while working
    ## with the data.
    $vn(did_serial) = $sht(did=>$rU);

    if ( $vn(did_serial) != $null ) {
        xinfo("Cache hit for DID [$rU]: [$sht(did=>$rU)]\n");
        xavp_params_explode("$vn(did_serial)", "did_data");
        return;
    }

    xinfo("Cache miss for DID [$rU]\n");
    route(QUERY_DID_DB);
}


route[QUERY_DID_DB] {
    $var(query) = "SELECT * "
                + "FROM dids "
                + "WHERE did = " + $(rU{sql.val.str});

    xdbg("Excuting DB query [$var(query)]\n");
    $var(sql_rc) = sql_xquery("db", "$var(query)", "did_data");

    if ( $var(sql_rc) == -1 ) {
        ## -1 is an error with the query - not an empty row.
        xerr("Error in [$var(query)]. Reply '503 Server Error' and exit\n");
        send_reply("503", "Server Error");
        exit;
    }

    if ( $var(sql_rc) == 2 ) {
        ## 2 means no rows returned. Use an empty string to cache this.
        xinfo("No data found for query [$var(query)]\n");

        ## Lots of potential ways to handle this - we'll set the looked up
        ## column as an empty string in the xavp:
        $xavp(did_data=>did) = "";
    }

    xavp_params_implode("did_data", "$sht(did=>$rU)");
    xinfo("Serialized query result: [$sht(did=>$rU)]\n");
}


